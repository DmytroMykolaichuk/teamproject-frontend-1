{"version":3,"file":"static/js/394.8de4ae88.chunk.js","mappings":"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","sources":["components/AccountPage/UserForm/UserForm.styled.js","../node_modules/date-fns/esm/locale/en-GB/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/en-GB/index.js","components/AccountPage/UserForm/UserForm.js","../node_modules/date-fns/esm/eachYearOfInterval/index.js","pages/AccountPage.js"],"sourcesContent":["import styled, { createGlobalStyle } from 'styled-components';\nimport { Form as FormikForm, Field, ErrorMessage } from 'formik';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { device } from 'constants';\nconst { tablet, desktop } = device;\n\nexport const FormWrap = styled.div`\n  @media (max-width: ${tablet - 1}px) {\n    display: grid;\n    flex-direction: row;\n    align-items: center;\n    flex-wrap: wrap;\n    position: relative;\n    padding: 40px 0;\n    border-radius: 16px;\n    background-color: ${p => p.theme.secondaryBgColor};\n  }\n\n  @media (min-width: ${tablet}px) and (max-width: ${desktop - 1}px) {\n    position: static;\n    border-radius: 16px;\n    padding: 40px 0;\n    background-color: ${p => p.theme.secondaryBgColor};\n  }\n\n  @media (min-width: ${desktop}px) {\n    background-color: ${p => p.theme.secondaryBgColor};\n    position: static;\n    padding: 60px 0;\n    border-radius: 16px;\n    gap: 24px;\n  }\n`;\n\nexport const Form = styled(FormikForm)`\n  @media (max-width: ${desktop - 1}px) {\n    display: flex;\n    gap: 18px;\n    flex-direction: column;\n    flex-wrap: wrap;\n    align-content: center;\n    justify-content: center;\n    align-items: flex-start;\n  }\n\n  @media (min-width: ${desktop}px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 24px;\n  }\n`;\n\nexport const FieldWrap = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  @media (min-width: ${desktop}px) {\n    gap: 8px;\n  }\n`;\n\nexport const Label = styled.label`\n  color: ${p => p.theme.userFormLabelColor};\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 14px;\n`;\n\nexport const Input = styled(Field)`\n  color: ${p => p.theme.mainTextColor};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  border-radius: 8px;\n  border: 1px solid ${p => p.theme.userFormInputBorderColor};\n  width: 299px;\n  height: 42px;\n  padding: 8px;\n  outline: none;\n  background-color: ${props =>\n    props.hasContent ? 'transparent' : p => p.theme.secondaryBgColor};\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &::placeholder {\n    color: ${p => p.theme.mainTextColor};\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 18px;\n  }\n\n  &:hover,\n  &:focus {\n    border-color: ${p => p.theme.mainTextColor};\n  }\n\n  @media (min-width: ${tablet}px) {\n    width: 354px;\n    height: 46px;\n    font-size: 16px;\n  }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  color: red;\n  font-size: 12px;\n  margin-top: 5px;\n`;\n\nexport const ImageContainer = styled.div`\n  position: absolute;\n  top: -6%;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  z-index: 1;\n\n  @media (min-width: ${tablet}px) {\n    width: 124px;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport const UserImage = styled.img`\n  width: 72px;\n  height: 72px;\n  border-radius: 50%;\n  border: 2px solid #3e85f3;\n\n  @media (min-width: ${tablet}px) {\n    width: 124px;\n    height: 124px;\n  }\n`;\n\nexport const Upload = styled.input`\n  opacity: 0;\n  position: absolute;\n  bottom: -3%;\n  left: 70%;\n  transform: translateX(-50%);\n  width: 14px;\n  height: 14px;\n  cursor: pointer;\n  border-radius: 50%;\n  background-color: transparent;\n  z-index: 3;\n\n  @media (min-width: ${tablet}px) {\n    width: 18px;\n\n    height: 18px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  position: absolute;\n  bottom: -3%;\n  left: 70%;\n  transform: translateX(-50%);\n  width: 14px;\n  fill: none;\n  background-color: #3e85f3;\n  height: 14px;\n  stroke: white;\n  border-radius: 50%;\n  z-index: 2;\n\n  @media (min-width: ${tablet}px) {\n    width: 18px;\n    height: 18px;\n    bottom: -3%;\n    left: 70%;\n  }\n`;\n\nexport const BdayIcon = styled.svg`\n  position: absolute;\n  right: 15px;\n  width: 14px;\n  height: 14px;\n  fill: none;\n  height: 14px;\n  stroke: ${p => p.theme.mainTextColor};\n  border-radius: 50%;\n  z-index: 2;\n\n  @media (min-width: ${tablet}px) {\n    width: 18px;\n    height: 18px;\n    position: absolute;\n    top: auto;\n    transform: translateY(0);\n  }\n`;\n\nexport const PlaceholderContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background: #ccc;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const UserInfoWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  margin-top: 18px;\n  margin-bottom: 40px;\n\n  @media (min-width: ${tablet}px) and (max-width: ${desktop - 1}px) {\n    margin-top: 20px;\n    gap: 8px;\n  }\n\n  @media (min-width: ${desktop}px) {\n    display: grid;\n    grid-column: 1 / span 2;\n    text-align: center;\n    margin-top: 20px;\n  }\n`;\n\nexport const UserName = styled.span`\n  color: ${p => p.theme.secondaryTextColor};\n  font-size: 14px;\n  font-weight: 700;\n\n  @media (min-width: ${tablet}px) {\n    font-size: 18px;\n  }\n`;\n\nexport const UserStatus = styled.span`\n  color: ${p => p.theme.userFormStatusColor};\n  font-size: 12px;\n  font-weight: 400;\n\n  @media (min-width: ${tablet}px) {\n    font-size: 14px;\n  }\n`;\n\nexport const SaveChangesBtn = styled.button`\n  display: block;\n  width: 195px;\n  margin-top: 40px;\n  padding: 14px 0;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border-radius: 16px;\n  color: ${p => p.theme.buttonTextColor};\n  background-color: ${p => p.theme.mainAccentColor};\n  border: transparent;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  margin-left: auto;\n  margin-right: auto;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.mainAccentColorActive};\n  }\n\n  @media (min-width: ${desktop}px) {\n    margin-top: 88px;\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nexport const StyledDatePickerInputWrapper = styled.div`\n  position: relative;\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  align-content: center;\n`;\n\nexport const InputWrapperL = styled.div`\n  display: grid;\n  gap: 18px;\n\n  @media (min-width: ${tablet}px) and (max-width: ${desktop - 1}px) {\n    gap: 24px;\n  }\n\n  @media (min-width: ${desktop}px) {\n    gap: 24px;\n    display: grid;\n    justify-content: end;\n  }\n`;\n\nexport const InputWrapperR = styled.div`\n  display: grid;\n  gap: 18px;\n\n  @media (min-width: ${tablet}px) and (max-width: ${desktop - 1}px) {\n    gap: 24px;\n  }\n\n  @media (min-width: ${desktop}px) {\n    gap: 24px;\n    display: grid;\n    align-content: flex-start;\n    align-items: flex-start;\n  }\n`;\n\nexport const DatePickerWrapperStyles = createGlobalStyle`\n\n.datepicker_icon_button {\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: none;\n  border: none;\n  cursor: pointer;\n  opacity: 0; \n  z-index: 4;\n}\n\n.datepicker_nav {\n   background-color:${p => p.theme.mainAccentColor};\n        margin: 10px;\n        display: flex;\n        justify-content: center;\n\n         @media (min-width: ${tablet}px) {\n          gap: 16px;\n         }\n        }\n\n.datepicker_select {\n  font-size: 16px !important;\nbackground-color: ${p => p.theme.mainAccentColor} !important;\n  border: none !important;\n  color:${p => p.theme.buttonTextColor} !important; \n  outline: none !important;\n\n @media (min-width: ${tablet}px) {\nfont-size: 24px !important;\nline-height: 24px!important;\n }\n\n}\n\n.datepicker_btn {\nbackground-color:${p => p.theme.mainAccentColor};\n  border: none; \n  color:${p => p.theme.buttonTextColor};\n   outline: none;\n\n   @media (min-width: ${tablet}px) {\nwidth: 50px !important;\n }\n}\n\n.react-datepicker {\n  border: none !important;\n   border-radius: 16px !important;\n\n     position: absolute !important;\n\n  top: 735% !important; \n  left: 150% !important;\n  transform: translate(-50%, -50%) !important;\n  z-index: 2 !important; \n\n  @media (min-width: 376px) and (max-width: 768px) {\n\n  top: 735% !important; \n  left: 150% !important;\n  transform: translate(-50%, -50%) !important;\n  z-index: 2 !important; \n  }\n}\n\n.react-datepicker__header {\n    border-top-left-radius: 16px !important;\n    border-top-right-radius: 16px !important;\n    border-bottom-left-radius: 0; \n    border-bottom-right-radius: 0; \n    border-color: #FFFFFF33 !important;\n    background-color: ${p => p.theme.mainAccentColor} !important;\n   \n}\n\n.react-datepicker__day-name {\n  font-size: 14px !important;\nline-height: 18px !important;\n\n     @media (min-width: ${tablet}px) {\n      width: 48px !important;\n      margin: auto !important;\n      font-size: 18px !important;\nline-height: 24px !important;\npadding: 12px !important;\n     }\n}\n\n.react-datepicker__day--selected {\n    background-color: ${p => p.theme.buttonTextColor}  !important; \n    color: ${p => p.theme.mainAccentColor} !important;\n    border-radius: 50% !important;\n\n    @media (min-width: ${tablet}px) {\n      width: 48px !important;\n      height: 48px !important;\n      padding: 12px!important;\n    }\n}\n\n  .react-datepicker__day {\n    color: ${p => p.theme.buttonTextColor}  !important;\n     border-radius: 50% !important;\n\n      @media (min-width: ${tablet}px) {\n        padding: 12px!important;\n         width: 48px !important;\n       height: 48px !important;\n    font-size: 18px !important;\n     line-height: 24px !important;\n     margin: auto !important;\n      }\n    \n  }\n\n   .react-datepicker__day:hover {\n     color:  ${p => p.theme.mainAccentColor} !important;\n     background-color: ${p => p.theme.buttonTextColor}  !important; \n border-radius: 50% !important;\n     @media (min-width: ${tablet}px) {\n       width: 48px !important;\n       height: 48px !important;\n    padding: 12px !important;\n     }\n\n   }\n\n   .react-datepicker__day.react-datepicker__day--selected {\n color: ${p => p.theme.mainAccentColor} !important;\n background-color: ${p => p.theme.buttonTextColor}  !important; \n\n  @media (min-width: ${tablet}px) {\n     width: 48px !important;\nheight: 48px !important;\n    padding: 12px !important;\n  }\n   }\n\n   .react-datepicker__day--keyboard-selected {\n     color: ${p => p.theme.mainAccentColor} !important;\n background-color: ${p => p.theme.buttonTextColor}  !important; \n   }\n\n\n .react-datepicker__day-name {\n    color: ${p => p.theme.buttonTextColor} !important;\n  }\n\n  .react-datepicker__month {\n @media (min-width: ${tablet}px) {\n    margin: auto !important;\n    }\n\n  }\n\n  .react-datepicker__month-container{\n     background-color: ${p => p.theme.mainAccentColor} !important;\n    border: none  !important;\n    border-radius: 16px !important;\n\n    @media (min-width: ${tablet}px) {\n      padding: 9px 18px;\n      width: 372px !important;\n    }\n  }\n\n   .react-datepicker__day--outside-month {\n     color: ${p => p.theme.buttonTextColor} !important;\n     opacity: 0% !important;\n     pointer-events: none !important;\n   }\n\n   .react-datepicker__day-name:nth-child(6),\n.react-datepicker__day-name:nth-child(7) {\n     color: ${p => p.theme.buttonTextColor} !important;\n     opacity: 0.35 !important;\n}\n\ninput {\n color: ${p => p.theme.mainTextColor};\n  font-size: 14px;\n  font-weight: 600;\n  border-radius: 8px;\n  border: 1px solid ${p => p.theme.userFormInputBorderColor}; \n  width: 299px;\n  height: 42px;\n  padding: 8px;\n  outline: none;\n  background-color: ${props =>\n    props.hasContent ? 'transparent' : p => p.theme.secondaryBgColor};\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &::placeholder {\n    font-weight: normal;\n  }\n\n  &:hover,\n  &:focus {\n    border-color: ${p => p.theme.mainTextColor};\n  }\n\n   @media (min-width: ${tablet}px) {\n    width: 354px;\n  height: 46px;\n   font-size: 16px;\n   }\n  }\n`;\n","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, d MMMM yyyy',\n  long: 'd MMMM yyyy',\n  medium: 'd MMM yyyy',\n  short: 'dd/MM/yyyy'\n};\nvar timeFormats = {\n  full: 'HH:mm:ss zzzz',\n  long: 'HH:mm:ss z',\n  medium: 'HH:mm:ss',\n  short: 'HH:mm'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","import formatDistance from \"../en-US/_lib/formatDistance/index.js\";\nimport formatRelative from \"../en-US/_lib/formatRelative/index.js\";\nimport localize from \"../en-US/_lib/localize/index.js\";\nimport match from \"../en-US/_lib/match/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United Kingdom).\n * @language English\n * @iso-639-2 eng\n * @author Alex [@glintik]{@link https://github.com/glintik}\n */\nvar locale = {\n  code: 'en-GB',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4\n  }\n};\nexport default locale;","import React, { useState } from 'react';\nimport { FormWrap, FieldWrap, Label, Input, BdayIcon, StyledDatePickerInputWrapper, InputWrapperL, InputWrapperR, ErrorText, Form, ImageContainer, UserImage, Upload, UserInfoWrap, UserName, UserStatus, SaveChangesBtn,  DatePickerWrapperStyles} from './UserForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik} from 'formik';\nimport * as yup from 'yup';\nimport { selectUser } from 'redux/auth/selectors';\nimport icon from 'assets/icons/symbol-defs.svg';\nimport { Icon } from './UserForm.styled';\nimport { useEffect } from 'react';\nimport { fetchUserAccount, refreshUser } from 'redux/auth/operations';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { getYear, getMonth, eachYearOfInterval } from 'date-fns';\nimport DatePicker from \"react-datepicker\";\nimport { registerLocale, setDefaultLocale } from 'react-datepicker';\nimport enGB from 'date-fns/locale/en-GB';\nimport { useRef } from 'react';\n\nconst validationSchema = yup.object().shape({\n  userName: yup.string().max(16, 'Max 16 characters').min(2, 'Min 2 characters'),\n  email: yup.string().email('Invalid email'),\n  birthday: yup.date(),\n  phone: yup.string(), \n  skype: yup.string().max(16, 'Max 16 characters').min(5, 'Min 5 characters'),\n});\n\nconst UserForm = () => {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const [localUserData, setLocalUserData] = useState({\n    profilePicture: '',\n    userName: '',\n    email: '',\n    birthday: new Date(),\n    phone: '',\n    skype: '',\n  });\n\n  useEffect(() => {\n    dispatch(fetchUserAccount());\n  }, [dispatch]);\n\n  const handleSubmit = async (values) => {\n    setFormSubmitted(true);\n    try {\n      setLocalUserData({ ...values });\n      await dispatch(fetchUserAccount(localUserData));\n      await dispatch(refreshUser(localUserData));\n    } catch (error) {\n      console.error('Submission error:', error);\n    } finally {\n      setFormSubmitted(false);\n    }\n  };\n  \n  const years = eachYearOfInterval({ start: new Date(1900, 0, 1), end: new Date() });\n  const months = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n  \n  registerLocale('en-GB', enGB);\n  setDefaultLocale('en-GB');\n  \n  const currentDate = new Date();\n  const currentDateString = currentDate.toLocaleDateString('en-GB', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n  });\n\n  const datePickerRef = useRef(null);\n  \n  return (\n    <FormWrap>\n      <ImageContainer>\n        {localUserData.profilePicture ? (\n          <UserImage\n            src={localUserData.profilePicture}\n            alt=\"User Profile\"\n          />\n        ) : (\n          <UserImage src={user.avatarURL}></UserImage>\n        )}\n        <Upload\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={e => {\n            const file = e.target.files[0];\n            if (file) {\n              const reader = new FileReader();\n              reader.onload = event => {\n                setLocalUserData({\n                  ...localUserData,\n                  profilePicture: event.target.result,\n                });\n              };\n              reader.readAsDataURL(file);\n            }\n          }}\n        />\n        <Icon>\n          <use href={icon + '#icon-plus'}></use>\n        </Icon>\n      </ImageContainer>\n      <UserInfoWrap>\n        <UserName>{user.name}</UserName>\n        <UserStatus>User</UserStatus>\n      </UserInfoWrap>\n      <Formik\n        initialValues={localUserData}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}>\n        {({ dirty, isSubmitting }) => (\n          <>\n            <>\n              <Form autoComplete=\"off\">\n                <InputWrapperL className=\"left-column\">\n                  <FieldWrap>\n                    <Label>User Name:</Label>\n                    <Input type=\"text\" name=\"userName\" placeholder=\"User Name\" />\n                    <ErrorText name=\"userName\" component=\"div\" />\n                  </FieldWrap>\n                  <FieldWrap>\n                    <Label>Birthday:</Label>\n                    <StyledDatePickerInputWrapper>\n                      <DatePicker\n                        ref={datePickerRef}\n                        formatWeekDay={nameOfDay => nameOfDay.substr(0, 1)}\n                        selected={localUserData.birthday}\n                        onChange={date => setLocalUserData({ ...localUserData, birthday: date })}\n                        locale=\"en-GB\"\n                        dateFormat=\"dd/MM/yyyy\"\n                        calendarStartDay={1}\n                        placeholderText={`Select your birthday (current date: ${currentDateString})`}\n                        onChangeRaw={e => {\n                          e.preventDefault();\n                          setLocalUserData({\n                            ...localUserData,\n                            birthday: new Date(e.target.value),\n                          });\n                        }}\n                        renderCustomHeader={({ date, changeYear, changeMonth, decreaseMonth, increaseMonth, prevMonthButtonDisabled, nextMonthButtonDisabled }) => (\n    \n                          <div className=\"datepicker_nav\"\n                          >\n                            <button className=\"datepicker_btn\" type=\"button\" onClick={decreaseMonth} disabled={prevMonthButtonDisabled}>\n                              {\"<\"}\n                            </button>\n                            <select className=\"datepicker_select\"\n                              value={getYear(date)}\n                              onChange={({ target: { value } }) => changeYear(value)}\n                            >\n                              {years.map((option) => (\n                                <option key={option} value={getYear(option)}>\n                                  {getYear(option)}\n                                </option>\n                              ))}\n                            </select>\n                            <select className=\"datepicker_select\"\n                              value={months[getMonth(date)]}\n                              onChange={({ target: { value } }) =>\n                                changeMonth(months.indexOf(value))\n                              }\n                            >\n                              {months.map((option) => (\n                                <option key={option} value={option}>\n                                  {option}\n                                </option>\n                              ))}\n                            </select>\n                            <button className=\"datepicker_btn\" type=\"button\"\n                              onClick={increaseMonth} disabled={nextMonthButtonDisabled}>\n                              {\">\"}\n                            </button>\n                          </div>\n    \n                        )}\n                      />\n                      <button\n                        className=\"datepicker_icon_button\"\n                        type=\"button\"\n                        onClick={() => {\n                          if (datePickerRef.current) {\n                            datePickerRef.current.setOpen(true);\n                          }\n                        }}\n                      >\n     \n                      </button>\n                      <BdayIcon>\n                        <use href={icon + '#icon-chevron-down'}></use>\n                      </BdayIcon>\n                    </StyledDatePickerInputWrapper>\n                    <ErrorText name=\"birthday\" component=\"div\" /></FieldWrap>\n                  <FieldWrap>\n                    <Label>Email:</Label>\n                    <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n                    <ErrorText name=\"email\" component=\"div\" />\n                  </FieldWrap>\n                </InputWrapperL>\n                <InputWrapperR className=\"right-column\">\n                  <FieldWrap>\n                    <Label>Phone:</Label>\n                    <Input type=\"text\" name=\"phone\" placeholder=\"38 (097) 256 34 77\" />\n                    <ErrorText name=\"phone\" component=\"div\" /></FieldWrap>\n                  <FieldWrap>\n                    <Label>Skype:</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"skype\"\n                      placeholder=\"Enter your Skype ID\"\n                    />\n                    <ErrorText name=\"skype\" component=\"div\" />\n                  </FieldWrap>\n                </InputWrapperR>\n              </Form>\n              <SaveChangesBtn\n                type=\"submit\"\n                disabled={!dirty || isSubmitting || formSubmitted}>\n                Save changes\n              </SaveChangesBtn>\n              \n              <DatePickerWrapperStyles />\n            </>\n          </>\n        )}\n      </Formik>\n    </FormWrap>\n    \n  );\n};\n\nexport default UserForm;\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachYearOfInterval\n * @category Interval Helpers\n * @summary Return the array of yearly timestamps within the specified time interval.\n *\n * @description\n * Return the array of yearly timestamps within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @returns {Date[]} the array with starts of yearly timestamps from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each year between 6 February 2014 and 10 August 2017:\n * const result = eachYearOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2017, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Thu Jan 01 2015 00:00:00,\n * //   Fri Jan 01 2016 00:00:00,\n * //   Sun Jan 01 2017 00:00:00\n * // ]\n */\nexport default function eachYearOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setMonth(0, 1);\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setFullYear(currentDate.getFullYear() + 1);\n  }\n  return dates;\n}","import { UserForm } from \"components/AccountPage\";\n\nconst AccountPage = () => (\n  <>\n    <UserForm/>\n  </>\n);\n\nexport default AccountPage;\n"],"names":["tablet","device","desktop","FormWrap","styled","_templateObject","_taggedTemplateLiteral","p","theme","secondaryBgColor","Form","FormikForm","_templateObject2","FieldWrap","_templateObject3","Label","_templateObject4","userFormLabelColor","Input","Field","_templateObject5","mainTextColor","userFormInputBorderColor","props","hasContent","ErrorText","ErrorMessage","_templateObject6","ImageContainer","_templateObject7","UserImage","_templateObject8","Upload","_templateObject9","Icon","_templateObject10","BdayIcon","_templateObject11","UserInfoWrap","_templateObject12","_templateObject13","UserName","_templateObject14","secondaryTextColor","UserStatus","_templateObject15","userFormStatusColor","SaveChangesBtn","_templateObject16","buttonTextColor","mainAccentColor","mainAccentColorActive","StyledDatePickerInputWrapper","_templateObject17","InputWrapperL","_templateObject18","InputWrapperR","_templateObject19","DatePickerWrapperStyles","createGlobalStyle","_templateObject20","date","buildFormatLongFn","formats","full","long","medium","short","defaultWidth","time","dateTime","code","formatDistance","formatLong","formatRelative","localize","match","options","weekStartsOn","firstWeekContainsDate","validationSchema","yup","shape","userName","max","min","email","birthday","phone","skype","user","useSelector","selectUser","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","formSubmitted","setFormSubmitted","_useState3","profilePicture","Date","_useState4","localUserData","setLocalUserData","useEffect","fetchUserAccount","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","_objectSpread","refreshUser","t0","console","error","finish","stop","_x","apply","arguments","years","dirtyInterval","requiredArgs","interval","startDate","toDate","start","endTime","end","getTime","RangeError","dates","currentDate","setHours","setMonth","push","setFullYear","getFullYear","eachYearOfInterval","months","registerLocale","enGB","setDefaultLocale","currentDateString","toLocaleDateString","year","month","day","datePickerRef","useRef","_jsxs","children","_jsx","src","alt","avatarURL","type","accept","onChange","e","file","target","files","reader","FileReader","onload","event","result","readAsDataURL","href","icon","name","Formik","initialValues","onSubmit","_ref2","dirty","isSubmitting","_Fragment","autoComplete","className","placeholder","component","DatePicker","ref","formatWeekDay","nameOfDay","substr","selected","locale","dateFormat","calendarStartDay","placeholderText","concat","onChangeRaw","preventDefault","value","renderCustomHeader","_ref3","changeYear","changeMonth","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","onClick","disabled","getYear","_ref4","map","option","getMonth","_ref5","indexOf","current","setOpen","UserForm"],"sourceRoot":""}