{"version":3,"file":"static/js/181.c30e31c5.chunk.js","mappings":"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","sources":["components/AccountPage/UserForm/UserForm.styled.js","components/AccountPage/UserForm/UserForm.js","../node_modules/date-fns/esm/eachYearOfInterval/index.js","pages/AccountPage.js"],"sourcesContent":["import styled, { createGlobalStyle } from 'styled-components';\nimport { Form as FormikForm, Field, ErrorMessage } from 'formik';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"; \nimport { device } from 'constants';\nconst { tablet, desktop } = device;\n\nexport const FormWrap = styled.div`\n\n @media (max-width: ${tablet - 1}px) {\n display: grid;\n    flex-direction: row;\n    align-items: center;\n    flex-wrap: wrap;\n    position: relative;\n    padding: 40px 0;\n    border-radius: 16px;\n    background-color: ${p => p.theme.secondaryBgColor};\n}\n\n  @media (min-width: ${tablet}px) and (max-width: ${desktop - 1}px) {\n    position: static;\n    border-radius: 16px;\n    padding: 40px 0;\n     background-color: ${p => p.theme.secondaryBgColor};\n  }\n\n @media (min-width: ${desktop}px) {\n  background-color: ${p => p.theme.secondaryBgColor};\n  position: static;\n    padding: 60px 0;\n    border-radius: 16px;\n     grid-template-columns: repeat(2, 1fr);\n    gap: 24px;\n  }\n`;\n\nexport const Form = styled(FormikForm)`\n@media (max-width: ${desktop - 1}px)\n\n {display: flex;\n  gap:18px;\n    flex-direction: column;\n    flex-wrap: wrap;\n    align-content: center;\n    justify-content: center;\n    align-items: flex-start;}\n\n  @media (min-width: ${desktop}px) {\n    display: grid;\n     grid-template-columns: 1fr 1fr;\n    gap: 24px;\n     grid-column: span 2;\n  }\n\n`;\n\nexport const StyledDatePickerInput = styled(DatePicker)`\n  color: #111;\n  font-size: 14px;\n  font-weight: 600;\n  border-radius: 8px;\n  border: 1px solid rgba(17, 17, 17, 0.1);\n  width: 299px;\n  height: 42px;\n  padding: 8px;\n  outline: none;\n  background-color: ${props => (props.hasContent ? \"transparent\" : \"white\")};\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &::placeholder {\n    font-weight: normal;\n  }\n\n  &:hover,\n  &:focus {\n    border-color: #111111;\n  }\n`;\n\nexport const FieldWrap = styled.div`\nposition: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  @media (min-width: ${desktop}px) {\n    gap: 8px;\n  }\n`;\n\n\nexport const Label = styled.label`\n  color: #111;\nfont-size: 12px;\nfont-weight: 400;\nline-height: 14px;\n`;\n\nexport const Input = styled(Field)`\n  color: #111;\n  font-size: 14px;\n  font-weight: 600;\n  border-radius: 8px;\n  border: 1px solid rgba(17, 17, 17, 0.1);\n  width: 299px;\n  height: 42px;\n  padding: 8px;\n  outline: none;\n  background-color:  ${props => (props.hasContent ? 'transparent' : 'white')};\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &::placeholder {\n    color: #111;\nfont-size: 14px;\nfont-weight: 600;\nline-height: 18px;\n  }\n\n  &:hover,\n  &:focus {\n    border-color: #111111;\n  };\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  color: red;\n  font-size: 12px;\n  margin-top: 5px;\n`;\n\nexport const ImageContainer = styled.div`\n  position: absolute;\n  top: -6%;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  z-index: 1;\n\n   @media (min-width: ${tablet}px) {\n    width: 124px;\n     position: relative;\n     display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n   }\n`;\n\nexport const UserImage = styled.img`\n  width: 72px;\n  height: 72px;\n  border-radius: 50%;\n\n   @media (min-width: ${tablet}px) {\n     width: 124px;\n  height: 124px;\n  }\n`;\n\nexport const Upload = styled.input`\n  opacity: 0;\n  position: absolute;\n  bottom: -3%;\n  left: 70%;\n  transform: translateX(-50%);\n  width: 14px;\n  height: 14px;\n  cursor: pointer;\n  border-radius: 50%;\n  background-color: transparent;\n  z-index: 3;\n\n   @media (min-width: ${tablet}px) {\n        width: 18px;\n    \n    height: 18px;\n}\n @media (min-width: ${desktop}px)  {\n\n    width: 18px;\n  height: 18px;\n  }\n`;\n\nexport const Icon = styled.svg`\n  position: absolute;\n  bottom: -3%;\n  left: 70%;\n  transform: translateX(-50%);\n  width: 14px;\n  fill: none;\n  background-color: #3E85F3;\n  height: 14px;\n  stroke: white;\n  border-radius: 50%;\n  z-index: 2;\n\n   @media (min-width: ${tablet}px) {\n    width: 24px;\n    height: 24px;\n     bottom: -3%;\n  left: 70%;\n}\n`;\n\nexport const BdayIcon = styled.svg`\n   position: relative;\n  right: 20px;\n  width: 14px;\n  fill: none;\n  height: 14px;\n  stroke: #111111;\n  border-radius: 50%;\n  z-index: 2;\n\n   @media (min-width: ${desktop}px) {\n    position: relative; \n    top: auto;\n    transform: translateY(0);\n   right: 20px;\n  }\n`;\n\nexport const PlaceholderContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background: #ccc;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const UserInfoWrap = styled.div`\ndisplay: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  margin-top: 18px;\n  margin-bottom: 40px;\n\n   @media (min-width: ${tablet}px)  and (max-width: ${desktop - 1}px) {\n    margin-top: 20px;\n    gap: 8px;\n  }\n\n   @media (min-width: ${desktop}px) {\n    display: grid;\n    grid-column: 1 / span 2;\n    text-align: center;\n    margin-top: 20px;\n\n  }\n`;\n\nexport const UserName = styled.span`\ncolor: #343434;\n  font-size: 14px;\n  font-weight: 700;\n\n`;\n\nexport const UserStatus = styled.span`\ncolor: #343434;\n  font-size: 12px;\n  font-weight: 400;\n  // margin-bottom: 40px;\n\n`;\n\nexport const SaveChangesBtn = styled.button`\ndisplay: block;\nwidth: 195px;\n  margin-top: 40px;\n  padding: 14px 0;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border-radius: 16px;\n  color: ${p => p.theme.secondaryBgColor};\n  background-color: ${p => p.theme.mainAccentColor};\n  border: transparent;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n   margin-left: auto;\n  margin-right: auto;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.mainAccentColorActive};\n  }\n\n   @media (min-width: ${tablet}px)  and (max-width: ${desktop - 1}px) {\nmargin-top: 40px;\n   }\n\n  @media (min-width: ${desktop}px) {\n    margin-top: 88px;\n   display: block;\n  margin-left: auto;\n  margin-right: auto;\n  }\n\n  \n`;\n\nexport const StyledDatePickerInputWrapper = styled.div`\n  position: relative;\n  display: inline-flex; \n  align-items: center;\n`;\n\nexport const InputWrapperL = styled.div`\ndisplay: grid;\ngap: 18px;\n\n @media (min-width: ${tablet}px)  and (max-width: ${desktop - 1}px) {\n  gap: 24px;\n }\n\n\n @media (min-width: ${desktop}px) {\n  gap: 24px;\n    display: flex;\n    flex-wrap: wrap;\n    align-content: flex-end;\n    justify-content: flex-start;\n    align-items: flex-start;\n    flex-direction: column;\n  }\n\n`;\n\nexport const InputWrapperR = styled.div`\ndisplay: grid;\ngap: 18px;\n\n @media (min-width: ${tablet}px)  and (max-width: ${desktop - 1}px) {\n  gap: 24px;\n }\n\n\n @media (min-width: ${desktop}px) {\n  gap: 24px;\n    display: flex;\n    flex-wrap: wrap;\n    align-content: flex-start;\n    justify-content: flex-start;\n    align-items: flex-start;\n    flex-direction: column;\n  }\n\n`;\n\nexport const DatePickerWrapperStyles = createGlobalStyle`\n\n.react-datepicker {\n  border: none !important;\n   border-radius: 16px !important;\n}\n\n  .react-datepicker__header {\n    border-radius: 16px !important;\n    background-color: #3E85F3 !important;\n    border-bottom: none !important;\n  }\n\n  .react-datepicker__day--selected {\n    background-color: white !important;\n    color:  #3E85F3 !important;\n    border-radius: 50% !important;\n  }\n\n  .react-datepicker__day {\n    color: white !important;\n     border-radius: 50% !important;\n  }\n\n   .react-datepicker__day.react-datepicker__day--selected {\n color:  #3E85F3 !important;\n   }\n\n .react-datepicker__day-name {\n    color: white !important;\n  }\n\n  .react-datepicker__month-container{\n     background-color: #3E85F3 !important;\n    border: none  !important;\n    border-radius: 16px !important;\n  }\n`;\n","import React, { useState } from 'react';\nimport { FormWrap, FieldWrap, Label, Input, BdayIcon, StyledDatePickerInputWrapper, InputWrapperL, InputWrapperR, StyledDatePickerInput, ErrorText, Form, ImageContainer, UserImage, Upload, UserInfoWrap, UserName, UserStatus, SaveChangesBtn,  DatePickerWrapperStyles} from './UserForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik} from 'formik';\nimport * as yup from 'yup';\nimport { selectUser } from 'redux/auth/selectors';\nimport icon from 'assets/icons/symbol-defs.svg';\nimport { Icon } from './UserForm.styled';\nimport { useEffect } from 'react';\nimport { fetchUserAccount, refreshUser } from 'redux/auth/operations';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { getYear, getMonth, eachYearOfInterval } from 'date-fns';\n\nconst validationSchema = yup.object().shape({\n  userName: yup.string().max(16, 'Max 16 characters').min(2, 'Min 2 characters'),\n  email: yup.string().email('Invalid email'),\n  birthday: yup.date(),\n  phone: yup.string(), \n  skype: yup.string().max(16, 'Max 16 characters').min(5, 'Min 5 characters'),\n});\n\nconst UserForm = () => {\n   const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const [localUserData, setLocalUserData] = useState({\n    profilePicture: '',\n    userName: '',\n    email: '',\n    birthday: new Date(),\n    phone: '',\n    skype: '',\n  });\n\n  useEffect(() => {\n    dispatch(fetchUserAccount());\n  }, [dispatch]);\n\n  const handleSubmit = async (values) => {\n  setFormSubmitted(true);\n  try {\n    setLocalUserData({ ...values });\n    await dispatch(fetchUserAccount(localUserData));\n    await dispatch(refreshUser(localUserData));\n  } catch (error) {\n    console.error('Submission error:', error);\n  } finally {\n    setFormSubmitted(false);\n  }\n  };\n  \n  const years = eachYearOfInterval({ start: new Date(1900, 0, 1), end: new Date() });\nconst months = [\n  \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n  \n   const currentDate = new Date();\n  const currentDateString = currentDate.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n  });\n  \n  return (\n   <FormWrap>\n       <ImageContainer>\n              {localUserData.profilePicture ? (\n                <UserImage\n                  src={localUserData.profilePicture}\n                  alt=\"User Profile\"\n                />\n              ) : (\n                <UserImage src={user.avatarURL}></UserImage>\n              )}\n              <Upload\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={e => {\n                  const file = e.target.files[0];\n                  if (file) {\n                    const reader = new FileReader();\n                    reader.onload = event => {\n                      setLocalUserData({\n                        ...localUserData,\n                        profilePicture: event.target.result,\n                      });\n                    };\n                    reader.readAsDataURL(file);\n                  }\n                }}\n              />\n              <Icon>\n                <use href={icon + '#icon-plus'}></use>\n              </Icon>\n      </ImageContainer>\n      <UserInfoWrap>\n            <UserName>{user.name}</UserName>\n                <UserStatus>User</UserStatus>\n                </UserInfoWrap>\n    <Formik\n      initialValues={localUserData}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}>\n      {({ dirty, isSubmitting }) => (\n        <>\n          <>\n              <Form autoComplete=\"off\">\n                <InputWrapperL className=\"left-column\">\n              <FieldWrap>\n              <Label>User Name:</Label>\n                  <Input type=\"text\" name=\"userName\" placeholder=\"User Name\"/>\n                <ErrorText name=\"userName\" component=\"div\" />\n                </FieldWrap>\n              <FieldWrap>\n                  <Label>Birthday:</Label>\n                  <StyledDatePickerInputWrapper>\n                 <StyledDatePickerInput\n         selected={localUserData.birthday}\n  onChange={date => setLocalUserData({ ...localUserData, birthday: date })}\n                      dateFormat=\"dd/MM/yyyy\"\n                       placeholderText={`Select your birthday (current date: ${currentDateString})`}\n  onChangeRaw={e => {\n    e.preventDefault();\n    setLocalUserData({\n      ...localUserData,\n      birthday: new Date(e.target.value),\n    });\n  }}\n  renderCustomHeader={({ date, changeYear, changeMonth, decreaseMonth, increaseMonth, prevMonthButtonDisabled, nextMonthButtonDisabled }) => (\n    <div\n      style={{\n        background: \"#3E85F3\",\n        margin: 10,\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n              <button type=\"button\" style={{\n        background: \"#3E85F3\",\n                border: \"none\", color: \"white\"\n      }} onClick={decreaseMonth} disabled={prevMonthButtonDisabled}>\n                {\"<\"}\n              </button>\n              <select  style={{\n        background: \"#3E85F3\",\n                border: \"none\", color: \"white\"\n      }}\n                value={getYear(date)}\n                onChange={({ target: { value } }) => changeYear(value)}\n              >\n                {years.map((option) => (\n                  <option key={option} value={getYear(option)}>\n                    {getYear(option)}\n                  </option>\n                ))}\n              </select>\n              <select style={{\n        background: \"#3E85F3\",\n                border: \"none\", color: \"white\"\n      }}\n                value={months[getMonth(date)]}\n                onChange={({ target: { value } }) =>\n                  changeMonth(months.indexOf(value))\n                }\n              >\n                {months.map((option) => (\n                  <option key={option} value={option}>\n                    {option}\n                  </option>\n                ))}\n              </select>\n              <button type=\"button\" style={{\n        background: \"#3E85F3\",\n                border: \"none\", color: \"white\"\n      }} onClick={increaseMonth} disabled={nextMonthButtonDisabled}>\n                {\">\"}\n      </button>\n    </div>\n  )}\n                    />\n                     <BdayIcon>\n              <use href={icon + '#icon-chevron-down'}></use>\n            </BdayIcon>\n                    </StyledDatePickerInputWrapper>\n              <ErrorText name=\"birthday\" component=\"div\" /></FieldWrap>\n              <FieldWrap>\n              <Label>Email:</Label>\n              <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n                    <ErrorText name=\"email\" component=\"div\" />\n                  </FieldWrap>\n                </InputWrapperL>\n                <InputWrapperR className=\"right-column\">\n              <FieldWrap>\n              <Label>Phone:</Label>\n              <Input type=\"text\" name=\"phone\" placeholder=\"38 (097) 256 34 77\" />\n              <ErrorText name=\"phone\" component=\"div\" /></FieldWrap>\n              <FieldWrap>\n              <Label>Skype:</Label>\n              <Input\n                type=\"text\"\n                name=\"skype\"\n                placeholder=\"Enter your Skype ID\"\n              />\n                <ErrorText name=\"skype\" component=\"div\" />\n                  </FieldWrap>\n                  </InputWrapperR>\n              </Form>\n               <SaveChangesBtn\n              type=\"submit\"\n              disabled={!dirty || isSubmitting || formSubmitted}>\n              Save changes\n              </SaveChangesBtn>\n              \n              <DatePickerWrapperStyles />\n          </>\n        </>\n      )}\n      </Formik>\n    </FormWrap>\n    \n  );\n};\n\nexport default UserForm;\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachYearOfInterval\n * @category Interval Helpers\n * @summary Return the array of yearly timestamps within the specified time interval.\n *\n * @description\n * Return the array of yearly timestamps within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @returns {Date[]} the array with starts of yearly timestamps from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each year between 6 February 2014 and 10 August 2017:\n * const result = eachYearOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2017, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Thu Jan 01 2015 00:00:00,\n * //   Fri Jan 01 2016 00:00:00,\n * //   Sun Jan 01 2017 00:00:00\n * // ]\n */\nexport default function eachYearOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setMonth(0, 1);\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setFullYear(currentDate.getFullYear() + 1);\n  }\n  return dates;\n}","import { UserForm } from \"components/AccountPage\";\n\nconst AccountPage = () => (\n  <>\n    <UserForm/>\n  </>\n);\n\nexport default AccountPage;\n"],"names":["tablet","device","desktop","FormWrap","styled","_templateObject","_taggedTemplateLiteral","p","theme","secondaryBgColor","Form","FormikForm","_templateObject2","StyledDatePickerInput","DatePicker","_templateObject3","props","hasContent","FieldWrap","_templateObject4","Label","_templateObject5","Input","Field","_templateObject6","ErrorText","ErrorMessage","_templateObject7","ImageContainer","_templateObject8","UserImage","_templateObject9","Upload","_templateObject10","Icon","_templateObject11","BdayIcon","_templateObject12","UserInfoWrap","_templateObject13","_templateObject14","UserName","_templateObject15","UserStatus","_templateObject16","SaveChangesBtn","_templateObject17","mainAccentColor","mainAccentColorActive","StyledDatePickerInputWrapper","_templateObject18","InputWrapperL","_templateObject19","InputWrapperR","_templateObject20","DatePickerWrapperStyles","createGlobalStyle","_templateObject21","validationSchema","yup","shape","userName","max","min","email","birthday","phone","skype","user","useSelector","selectUser","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","formSubmitted","setFormSubmitted","_useState3","profilePicture","Date","_useState4","localUserData","setLocalUserData","useEffect","fetchUserAccount","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","_objectSpread","refreshUser","t0","console","error","finish","stop","_x","apply","arguments","years","dirtyInterval","requiredArgs","interval","startDate","toDate","start","endTime","end","getTime","RangeError","dates","currentDate","setHours","setMonth","push","setFullYear","getFullYear","eachYearOfInterval","months","currentDateString","toLocaleDateString","year","month","day","_jsxs","children","_jsx","src","alt","avatarURL","type","accept","onChange","e","file","target","files","reader","FileReader","onload","event","result","readAsDataURL","href","icon","name","Formik","initialValues","onSubmit","_ref2","dirty","isSubmitting","_Fragment","autoComplete","className","placeholder","component","selected","date","dateFormat","placeholderText","concat","onChangeRaw","preventDefault","value","renderCustomHeader","_ref3","changeYear","changeMonth","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","style","background","margin","display","justifyContent","border","color","onClick","disabled","getYear","_ref4","map","option","getMonth","_ref5","indexOf","UserForm"],"sourceRoot":""}