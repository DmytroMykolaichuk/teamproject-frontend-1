{"version":3,"file":"static/js/35.6bf94e6e.chunk.js","mappings":"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","sources":["components/AccountPage/UserForm/UserForm.styled.js","constants/phoneValidation.js","components/AccountPage/UserForm/UserForm.js","../node_modules/date-fns/esm/eachYearOfInterval/index.js","pages/AccountPage.js"],"sourcesContent":["import styled, { createGlobalStyle } from 'styled-components';\nimport { Form as FormikForm, Field, ErrorMessage } from 'formik';\nimport \"react-datepicker/dist/react-datepicker.css\"; \nimport { device } from 'constants';\nconst { tablet, desktop } = device;\n\nexport const FormWrap = styled.div`\n\n @media (max-width: ${tablet - 1}px) {\n display: grid;\n    flex-direction: row;\n    align-items: center;\n    flex-wrap: wrap;\n    position: relative;\n    padding: 40px 0;\n    border-radius: 16px;\n    background-color: ${p => p.theme.secondaryBgColor};\n}\n\n  @media (min-width: ${tablet}px) and (max-width: ${desktop - 1}px) {\n    position: static;\n    border-radius: 16px;\n    padding: 40px 0;\n     background-color: ${p => p.theme.secondaryBgColor};\n  }\n\n @media (min-width: ${desktop}px) {\n  background-color: ${p => p.theme.secondaryBgColor};\n  position: static;\n    padding: 60px 0;\n    border-radius: 16px;\n    gap: 24px;\n  }\n`;\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n`;\n\nexport const BoxWrap = styled.div`\n  @media (max-width: ${desktop - 1}px) {\n    display: flex;\n    gap: 18px;\n    flex-direction: column;\n    flex-wrap: wrap;\n    align-content: center;\n    justify-content: center;\n    align-items: flex-start;\n  }\n\n  @media (min-width: ${desktop}px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 24px;\n  }\n`;\n\nexport const FieldWrap = styled.div`\nposition: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n&.empty input {\n   border-color: 1px solid  #11111126;\n}\n\n &.error label {\n    color: ${p => p.theme.authFieldOnErrorColor};\n  }\n\n  &.error input {\n    border-color: ${p => p.theme.authFieldOnErrorColor};\n  }\n\n  &.success label {\n    color: ${p => p.theme.authFieldOnSuccessColor};\n  }\n\n  &.success input {\n    border-color: ${p => p.theme.authFieldOnSuccessColor};\n  }\n\n  @media (min-width: ${desktop}px) {\n    gap: 8px;\n  }\n`;\n\nexport const Label = styled.label`\ncolor: ${p => p.theme.userFormLabelColor}; \nfont-size: 12px;\nfont-weight: 400;\nline-height: 14px;\n`;\n\nexport const Input = styled(Field)`\n  color: ${p => p.theme.mainTextColor};\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 18px;\n  border-radius: 8px;\n  border: 1px solid  ${p => p.theme.userFormInputBorderColor}; \n  width: 299px;\n  height: 42px;\n  padding: 8px;\n  outline: none;\n  background-color:  ${props => (props.hasContent ? 'transparent' : p => p.theme.secondaryBgColor)};\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &::placeholder {\ncolor: ${p => p.theme.mainTextColor}; \nfont-size: 14px;\nfont-weight: 600;\nline-height: 18px;\n  }\n\n  &:hover,\n  &:focus {\n    border-color: ${p => p.theme.mainTextColor};\n  };\n\n   @media (min-width: ${tablet}px) {\n    width: 354px;\n  height: 46px;\n   font-size: 16px;\n   }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  color: red;\n  font-size: 12px;\n  margin-top: 5px;\n`;\n\nexport const SuccessText = styled.div`\n  margin-top: 8px;\n  margin-left: 18px;\n  font-size: 12px;\n  color: ${p => p.theme.authFieldOnSuccessColor};\n  line-height: 1.16;\n`;\n\n\nexport const ImageContainer = styled.div`\n  position: absolute;\n  top: -6%;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  z-index: 1;\n\n   @media (min-width: ${tablet}px) {\n    width: 124px;\n     position: relative;\n     display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n   }\n`;\n\nexport const UserImage = styled.img`\n  width: 72px;\n  height: 72px;\n  border-radius: 50%;\n  border: 2px solid #3E85F3;\n\n   @media (min-width: ${tablet}px) {\n     width: 124px;\n  height: 124px;\n  }\n`;\n\nexport const Upload = styled.input`\n  opacity: 0;\n  position: absolute;\n  bottom: -3%;\n  left: 70%;\n  transform: translateX(-50%);\n  width: 14px;\n  height: 14px;\n  cursor: pointer;\n  border-radius: 50%;\n  background-color: transparent;\n  z-index: 3;\n\n   @media (min-width: ${tablet}px) {\n        width: 18px;\n    \n    height: 18px;\n}\n`;\n\nexport const Icon = styled.svg`\n  position: absolute;\n  bottom: -3%;\n  left: 70%;\n  transform: translateX(-50%);\n  width: 14px;\n  fill: none;\n  background-color: #3E85F3;\n  height: 14px;\n  stroke: white;\n  border-radius: 50%;\n  z-index: 2;\n\n   @media (min-width: ${tablet}px) {\n    width: 18px;\n    height: 18px;\n     bottom: -3%;\n  left: 70%;\n}\n`;\n\nexport const BdayIcon = styled.svg`\n   position: absolute;\n  right: 15px;\n  width: 14px;\n  height: 14px;\n  fill: none;\n  height: 14px;\n  stroke: ${p => p.theme.mainTextColor};\n  border-radius: 50%;\n  z-index: 2;\n\n    @media (min-width: ${tablet}px) {\n    width: 18px;\n    height: 18px;\n    position: absolute; \n    top: auto;\n    transform: translateY(0);\n  }\n`;\n\nexport const PlaceholderContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background: #ccc;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const UserInfoWrap = styled.div`\ndisplay: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  margin-top: 18px;\n  margin-bottom: 40px;\n\n   @media (min-width: ${tablet}px)  and (max-width: ${desktop - 1}px) {\n    margin-top: 20px;\n    gap: 8px;\n  }\n\n   @media (min-width: ${desktop}px) {\n    display: grid;\n    grid-column: 1 / span 2;\n    text-align: center;\n    margin-top: 20px;\n\n  }\n`;\n\nexport const UserName = styled.span`\ncolor: ${p => p.theme.secondaryTextColor}; \n  font-size: 14px;\n  font-weight: 700;\n\n  @media (min-width: ${tablet}px) {\n    font-size: 18px;\n  }\n`;\n\nexport const UserStatus = styled.span`\ncolor: ${p => p.theme.userFormStatusColor}; \n  font-size: 12px;\n  font-weight: 400;\n\n   @media (min-width: ${tablet}px) {\n    font-size: 14px;\n  }\n\n`;\n\nexport const SaveChangesBtn = styled.button`\ndisplay: block;\nwidth: 195px;\n  margin-top: 40px;\n  padding: 14px 0;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.28;\n  border-radius: 16px;\n  color: ${p => p.theme.buttonTextColor};\n  background-color: ${p => p.theme.mainAccentColor};\n  border: transparent;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n   margin-left: auto;\n  margin-right: auto;\n\n  &:hover,\n  &:focus {\n    background-color: ${p => p.theme.mainAccentColorActive};\n  }\n\n  @media (min-width: ${desktop}px) {\n    margin-top: 88px;\n   display: block;\n  margin-left: auto;\n  margin-right: auto;\n  }\n\n  \n`;\n\nexport const StyledDatePickerInputWrapper = styled.div`\n  position: relative;\n  display: grid;\n  align-items: center;\n  justify-content: center; \n  align-content: center;\n\n`;\n\nexport const InputWrapperL = styled.div`\ndisplay: grid;\ngap: 18px;\n\n @media (min-width: ${tablet}px)  and (max-width: ${desktop - 1}px) {\n  gap: 24px;\n }\n\n\n @media (min-width: ${desktop}px) {\n  gap: 24px;\n    display: grid;\n    justify-content: end;\n  }\n\n`;\n\nexport const InputWrapperR = styled.div`\ndisplay: grid;\ngap: 18px;\n\n @media (min-width: ${tablet}px)  and (max-width: ${desktop - 1}px) {\n  gap: 24px;\n }\n\n @media (min-width: ${desktop}px) {\n  gap: 24px;\n  display: grid;\n  align-content: flex-start;\n  align-items: flex-start;\n}\n`;\n\nexport const DatePickerWrapperStyles = createGlobalStyle`\n\n.datepicker_icon_button {\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: none;\n  border: none;\n  cursor: pointer;\n  opacity: 0; \n  z-index: 4;\n}\n\n.datepicker_nav {\n   background-color:${p => p.theme.mainAccentColor};\n        margin: 10px;\n        display: flex;\n        justify-content: center;\n\n         @media (min-width: ${tablet}px) {\n          gap: 16px;\n         }\n        }\n\n.datepicker_select {\n  font-size: 16px !important;\nbackground-color: ${p => p.theme.mainAccentColor} !important;\n  border: none !important;\n  color:${p => p.theme.buttonTextColor} !important; \n  outline: none !important;\n\n @media (min-width: ${tablet}px) {\nfont-size: 24px !important;\nline-height: 24px!important;\n }\n\n}\n\n.datepicker_btn {\nbackground-color:${p => p.theme.mainAccentColor};\n  border: none; \n  color:${p => p.theme.buttonTextColor};\n   outline: none;\n\n   @media (min-width: ${tablet}px) {\nwidth: 50px !important;\n }\n}\n\n.react-datepicker {\n  border: none !important;\n   border-radius: 16px !important;\n}\n\n.react-datepicker__header {\n    border-top-left-radius: 16px !important;\n    border-top-right-radius: 16px !important;\n    border-bottom-left-radius: 0; \n    border-bottom-right-radius: 0; \n    border-color: #FFFFFF33 !important;\n    background-color: ${p => p.theme.mainAccentColor} !important;\n   \n}\n\n.react-datepicker__day-name {\n  font-size: 14px !important;\nline-height: 18px !important;\n\n     @media (min-width: ${tablet}px) {\n      width: 48px !important;\n      margin: auto !important;\n      font-size: 18px !important;\nline-height: 24px !important;\npadding: 12px !important;\n     }\n}\n\n.react-datepicker__day--selected {\n    background-color: ${p => p.theme.buttonTextColor}  !important; \n    color: ${p => p.theme.mainAccentColor} !important;\n    border-radius: 50% !important;\n\n    @media (min-width: ${tablet}px) {\n      width: 48px !important;\n      height: 48px !important;\n      padding: 12px!important;\n    }\n}\n\n  .react-datepicker__day {\n    color: ${p => p.theme.buttonTextColor}  !important;\n     border-radius: 50% !important;\n\n      @media (min-width: ${tablet}px) {\n        padding: 12px!important;\n         width: 48px !important;\n       height: 48px !important;\n    font-size: 18px !important;\n     line-height: 24px !important;\n     margin: auto !important;\n      }\n    \n  }\n\n   .react-datepicker__day:hover {\n     color:  ${p => p.theme.mainAccentColor} !important;\n     background-color: ${p => p.theme.buttonTextColor}  !important; \n border-radius: 50% !important;\n     @media (min-width: ${tablet}px) {\n       width: 48px !important;\n       height: 48px !important;\n    padding: 12px !important;\n     }\n\n   }\n\n   .react-datepicker__day.react-datepicker__day--selected {\n    opacity: 1 !important;\n color: ${p => p.theme.mainAccentColor} !important;\n background-color: ${p => p.theme.buttonTextColor}  !important; \n\n  @media (min-width: ${tablet}px) {\n     width: 48px !important;\nheight: 48px !important;\n    padding: 12px !important;\n  }\n   }\n\n   .react-datepicker__day--keyboard-selected {\n     color: ${p => p.theme.mainAccentColor} !important;\n background-color: ${p => p.theme.buttonTextColor}  !important; \n   }\n\n\n .react-datepicker__day-name {\n    color: ${p => p.theme.buttonTextColor} !important;\n  }\n\n  .react-datepicker__month {\n @media (min-width: ${tablet}px) {\n    margin: auto !important;\n    }\n\n  }\n\n  .react-datepicker__day--weekend {\n     opacity: 0.35 !important;\n  }\n\n.react-datepicker__day--weekend:hover {\n  opacity: 1 !important;\n}\n\n.react-datepicker__day--weekend.react-datepicker__day--today {\n  opacity: 1 !important;\n}\n\n  .react-datepicker__month-container{\n     background-color: ${p => p.theme.mainAccentColor} !important;\n    border: none  !important;\n    border-radius: 16px !important;\n\n    @media (min-width: ${tablet}px) {\n      padding: 9px 18px;\n      width: 372px !important;\n    }\n  }\n\n   .react-datepicker__day--outside-month {\n     color: ${p => p.theme.buttonTextColor} !important;\n     opacity: 0% !important;\n     pointer-events: none !important;\n   }\n\n   .react-datepicker__day-name:nth-child(6),\n.react-datepicker__day-name:nth-child(7) {\n     color: ${p => p.theme.buttonTextColor} !important;\n     opacity: 0.35 !important;\n}\n\ninput {\n color: ${p => p.theme.mainTextColor};\n  font-size: 14px;\n  font-weight: 600;\n  border-radius: 8px;\n  border: 1px solid ${p => p.theme.userFormInputBorderColor}; \n  width: 299px;\n  height: 42px;\n  padding: 8px;\n  outline: none;\n  background-color: ${props => (props.hasContent ? \"transparent\" :  p => p.theme.secondaryBgColor)};\n  transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &::placeholder {\n    font-weight: normal;\n  }\n\n  &:hover,\n  &:focus {\n    border-color: ${p => p.theme.mainTextColor};\n  }\n\n   @media (min-width: ${tablet}px) {\n    width: 354px;\n  height: 46px;\n   font-size: 16px;\n   }\n  }\n`;\n","export const phoneRegExp = /^(?:\\+380\\d{9}|0\\d{9}|380\\d{9}|38\\s\\d{3}\\s\\d{3}\\s\\d{2}\\s\\d{2})$/;","import React, { useState } from 'react';\nimport {\n  FormWrap,\n  FieldWrap,\n  Label,\n  Input,\n  BdayIcon,\n  StyledDatePickerInputWrapper,\n  InputWrapperL,\n  InputWrapperR,\n  ErrorText,\n  Form,\n  ImageContainer,\n  UserImage,\n  Upload,\n  UserInfoWrap,\n  UserName,\n  UserStatus,\n  SaveChangesBtn,\n  DatePickerWrapperStyles,\n  BoxWrap,\n} from './UserForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { selectUser } from 'redux/auth/selectors';\nimport icon from 'assets/icons/symbol-defs.svg';\nimport { Icon } from './UserForm.styled';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { getYear, getMonth, eachYearOfInterval } from 'date-fns';\nimport DatePicker from 'react-datepicker';\nimport { registerLocale, setDefaultLocale } from 'react-datepicker';\nimport enGB from 'date-fns/locale/en-GB';\nimport { useRef } from 'react';\nimport { updateUserAccount } from 'redux/auth/operations';\nimport Swal from 'sweetalert2';\nimport { phoneRegExp } from 'constants/phoneValidation';\n\nconst UserForm = () => {\n  const validationSchema = yup.object().shape({\n    userName: yup\n      .string()\n      .max(16, 'Max 16 characters')\n      .min(2, 'Min 2 characters')\n      .required('Name is required'),\n    email: yup.string()\n      .email('Email address must contain an \"@\" sign')\n      .matches(\n        /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*\\.\\w{2,3}$/,\n        'Must be a valid email'\n      )\n      .required('Email is required'),\n    birthday: yup.date(),\n    phone: yup.string().matches(phoneRegExp, 'Phone number is not valid'),\n    skype: yup.string().max(16, 'Max 16 characters').min(5, 'Min 5 characters'),\n    password: yup\n      .string()\n      .min(7, 'Must be at least 7 characters long'),\n  });\n\n  const user = useSelector(selectUser);\n  let dataNorm;\n  if (!user.birthday) {\n    dataNorm = new Date();\n  } else {\n    dataNorm = new Date(user.birthday);\n  }\n  const dispatch = useDispatch();\n  const [formSubmitted, setFormSubmitted] = useState(false);\n\n  const [userBirthday, setUserBirthday] = useState(dataNorm);\n\n  const [userAvatar, setUserAvatar] = useState(user.avatarURL);\n  const [userAvatarLocal, setUserAvatarLocal] = useState(user.avatarURL);\n\n  const handleSubmit = async values => {\n\n    const formData = new FormData();\n    if (typeof userAvatar !== 'string') {\n      formData.append('avatar', userAvatar);\n    }\n    if (values.email) {\n      formData.append('email', values.email);\n    }\n\n    if (values.phone) {\n      formData.append('phone', values.phone);\n    }\n    if (values.userName) {\n      formData.append('name', values.userName);\n    }\n    if (values.password) {\n      formData.append('password', values.password);\n    }\n    if (values.skype) {\n      formData.append('skype', values.skype);\n    }\n    if (userBirthday) {\n      formData.append('birthday', userBirthday);\n    }\n\n    setFormSubmitted(true);\n\n    try {\n      dispatch(updateUserAccount(formData));\n      Swal.fire({\n      icon: 'success',\n      title: 'Success',\n      text: 'Your information has been successfully updated!',\n      confirmButtonColor: '#3E85F3',\n    });\n    } catch (error) {\n      if (error.response && error.response.status === 409) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'User with this email address already exists!',\n          confirmButtonColor: '#3E85F3',\n        });\n      }\n    } finally {\n      setFormSubmitted(false);\n    }\n  };\n\n  const years = eachYearOfInterval({\n    start: new Date(1900, 0, 1),\n    end: new Date(),\n  });\n  const months = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  registerLocale('en-GB', enGB);\n  setDefaultLocale('en-GB');\n\n  const currentDate = new Date();\n  const currentDateString = currentDate.toLocaleDateString('en-GB', {\n    year: 'numeric',\n    month: '2-digit',\n    day: '2-digit',\n  });\n\n  const datePickerRef = useRef(null);\n\n  return (\n    <FormWrap>\n      <ImageContainer>\n        <UserImage src={userAvatarLocal} alt=\"User Profile\" />\n        <Upload\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={e => {\n            setUserAvatar(e.target.files[0]);\n            const file = e.target.files[0];\n            if (file) {\n              const reader = new FileReader();\n              reader.onload = event => {\n                setUserAvatarLocal(event.target.result);\n              };\n              reader.readAsDataURL(file);\n            }\n          }}\n        />\n        <Icon>\n          <use href={icon + '#icon-plus'}></use>\n        </Icon>\n      </ImageContainer>\n\n      <UserInfoWrap>\n        <UserName>{user.name}</UserName>\n        <UserStatus>User</UserStatus>\n      </UserInfoWrap>\n\n      <Formik\n        initialValues={{\n          userName: user.name,\n          email: user.email,\n          phone: user.phone || '',\n          skype: user.skype || '',\n          password: user.password || '',\n        }}\n        validationSchema={validationSchema}\n        onSubmit={values => {\n          handleSubmit(values);\n        }}\n      >\n        {formik => (\n          <Form autoComplete=\"off\">\n            <BoxWrap>\n              <InputWrapperL className=\"left-column\">\n                <FieldWrap className={`${formik.touched.userName && formik.errors.userName\n                  ? 'error'\n                  : ''\n                  }`}>\n                  <Label>User Name:</Label>\n                  <Input id=\"userName\" name=\"userName\" placeholder=\"User Name\" />\n                  <ErrorText name=\"userName\" component=\"div\" />\n                </FieldWrap>\n\n                <FieldWrap>\n                  <Label>Birthday:</Label>\n                  <StyledDatePickerInputWrapper>\n                    <DatePicker className={`${formik.touched.birthday && formik.errors.birthday\n                      ? 'error'\n                      : formik.touched.birthday && !formik.errors.birthday\n                        ? 'success'\n                        : ''\n                      }`}\n\n                      id=\"birthday\"\n                      name=\"birthday\"\n                      type=\"birthday\"\n                      ref={datePickerRef}\n                      formatWeekDay={nameOfDay => nameOfDay.substr(0, 1)}\n                      selected={userBirthday}\n                      onChange={date => {\n                        setUserBirthday(date);\n                      }}\n                      locale=\"en-GB\"\n                      dateFormat=\"dd/MM/yyyy\"\n                      calendarStartDay={1}\n                      placeholderText={`Select your birthday (current date: ${currentDateString})`}\n                      onChangeRaw={e => {\n                        e.preventDefault();\n\n                        setUserBirthday(new Date(e.target.value));\n                      }}\n                      renderCustomHeader={({\n                        date,\n                        changeYear,\n                        changeMonth,\n                        decreaseMonth,\n                        increaseMonth,\n                        prevMonthButtonDisabled,\n                        nextMonthButtonDisabled,\n                      }) => (\n                        <div className=\"datepicker_nav\">\n                          <button\n                            className=\"datepicker_btn\"\n                            type=\"button\"\n                            onClick={decreaseMonth}\n                            disabled={prevMonthButtonDisabled}\n                          >\n                            {'<'}\n                          </button>\n                          <select\n                            className=\"datepicker_select\"\n                            value={getYear(date)}\n                            onChange={({ target: { value } }) =>\n                              changeYear(value)\n                            }\n                          >\n                            {years.map(option => (\n                              <option key={option} value={getYear(option)}>\n                                {getYear(option)}\n                              </option>\n                            ))}\n                          </select>\n                          <select\n                            className=\"datepicker_select\"\n                            value={months[getMonth(date)]}\n                            onChange={({ target: { value } }) =>\n                              changeMonth(months.indexOf(value))\n                            }\n                          >\n                            {months.map(option => (\n                              <option key={option} value={option}>\n                                {option}\n                              </option>\n                            ))}\n                          </select>\n                          <button\n                            className=\"datepicker_btn\"\n                            type=\"button\"\n                            onClick={increaseMonth}\n                            disabled={nextMonthButtonDisabled}\n                          >\n                            {'>'}\n                          </button>\n                        </div>\n                      )}\n                    />\n                    <button\n                      className=\"datepicker_icon_button\"\n                      type=\"button\"\n                      onClick={() => {\n                        if (datePickerRef.current) {\n                          datePickerRef.current.setOpen(true);\n                        }\n                      }}\n                    ></button>\n                    <BdayIcon>\n                      <use href={icon + '#icon-chevron-down'}></use>\n                    </BdayIcon>\n                  </StyledDatePickerInputWrapper>\n                  <ErrorText name=\"birthday\" component=\"div\" />\n                </FieldWrap>\n\n                <FieldWrap className={`${formik.touched.email && formik.errors.email\n                  ? 'error'\n                  : ''\n                  }`}>\n                  <Label>Email:</Label>\n                  <Input type=\"text\" name=\"email\" placeholder=\"Email\" />\n                  <ErrorText name=\"email\" component=\"div\" />\n                </FieldWrap>\n              </InputWrapperL>\n\n              <InputWrapperR className=\"right-column\">\n                <FieldWrap className={`${formik.touched.phone && formik.errors.phone\n                  ? 'error'\n                  : ''\n                  }`}>\n                  <Label>Phone:</Label>\n                  <Input\n                    type=\"phone\"\n                    name=\"phone\"\n                    placeholder=\"38 (097) 256 34 77\"\n                  />\n                  <ErrorText name=\"phone\" component=\"div\" />\n                </FieldWrap>\n\n                <FieldWrap className={`${formik.touched.skype && formik.errors.skype\n                  ? 'error'\n                  : ''\n                  }`}>\n                  <Label>Skype:</Label>\n                  <Input\n                    name=\"skype\"\n                    type=\"text\"\n                    placeholder=\"Enter your Skype ID\"\n                  />\n                  <ErrorText name=\"skype\" component=\"div\" />\n                </FieldWrap>\n\n                <FieldWrap className={`${formik.touched.password && formik.errors.password\n                  ? 'error'\n                  : ''\n                  }`}>\n                  <Label htmlFor=\"password\">Password:</Label>\n                  <Input\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Change your password\"\n                  />\n                  <ErrorText name=\"password\" component=\"div\" />\n                </FieldWrap>\n              </InputWrapperR>\n            </BoxWrap>\n\n            <SaveChangesBtn type=\"submit\" disabled={formSubmitted}>\n              Save changes\n            </SaveChangesBtn>\n\n            <DatePickerWrapperStyles />\n          </Form>\n        )}\n      </Formik>\n    </FormWrap>\n  );\n};\n\nexport default UserForm;","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name eachYearOfInterval\n * @category Interval Helpers\n * @summary Return the array of yearly timestamps within the specified time interval.\n *\n * @description\n * Return the array of yearly timestamps within the specified time interval.\n *\n * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}\n * @returns {Date[]} the array with starts of yearly timestamps from the month of the interval start to the month of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each year between 6 February 2014 and 10 August 2017:\n * const result = eachYearOfInterval({\n *   start: new Date(2014, 1, 6),\n *   end: new Date(2017, 7, 10)\n * })\n * //=> [\n * //   Wed Jan 01 2014 00:00:00,\n * //   Thu Jan 01 2015 00:00:00,\n * //   Fri Jan 01 2016 00:00:00,\n * //   Sun Jan 01 2017 00:00:00\n * // ]\n */\nexport default function eachYearOfInterval(dirtyInterval) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime();\n\n  // Throw an exception if start date is after end date or if any date is `Invalid Date`\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  currentDate.setMonth(0, 1);\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setFullYear(currentDate.getFullYear() + 1);\n  }\n  return dates;\n}","import { UserForm } from \"components/AccountPage\";\n\nconst AccountPage = () => (\n  <>\n    <UserForm/>\n  </>\n);\n\nexport default AccountPage;\n"],"names":["tablet","device","desktop","FormWrap","styled","_templateObject","_taggedTemplateLiteral","p","theme","secondaryBgColor","Form","FormikForm","_templateObject2","BoxWrap","_templateObject3","FieldWrap","_templateObject4","authFieldOnErrorColor","authFieldOnSuccessColor","Label","_templateObject5","userFormLabelColor","Input","Field","_templateObject6","mainTextColor","userFormInputBorderColor","props","hasContent","ErrorText","ErrorMessage","_templateObject7","ImageContainer","_templateObject8","_templateObject9","UserImage","_templateObject10","Upload","_templateObject11","Icon","_templateObject12","BdayIcon","_templateObject13","UserInfoWrap","_templateObject14","_templateObject15","UserName","_templateObject16","secondaryTextColor","UserStatus","_templateObject17","userFormStatusColor","SaveChangesBtn","_templateObject18","buttonTextColor","mainAccentColor","mainAccentColorActive","StyledDatePickerInputWrapper","_templateObject19","InputWrapperL","_templateObject20","InputWrapperR","_templateObject21","DatePickerWrapperStyles","createGlobalStyle","_templateObject22","phoneRegExp","dataNorm","validationSchema","yup","shape","userName","max","min","required","email","matches","birthday","phone","skype","password","user","useSelector","selectUser","Date","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","formSubmitted","setFormSubmitted","_useState3","_useState4","userBirthday","setUserBirthday","_useState5","avatarURL","_useState6","userAvatar","setUserAvatar","_useState7","_useState8","userAvatarLocal","setUserAvatarLocal","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","formData","wrap","_context","prev","next","FormData","append","updateUserAccount","Swal","icon","title","text","confirmButtonColor","error","response","status","stop","_x","apply","arguments","years","dirtyInterval","requiredArgs","interval","startDate","toDate","start","endTime","end","getTime","RangeError","dates","currentDate","setHours","setMonth","push","setFullYear","getFullYear","eachYearOfInterval","months","registerLocale","enGB","setDefaultLocale","currentDateString","toLocaleDateString","year","month","day","datePickerRef","useRef","_jsxs","children","_jsx","src","alt","type","accept","onChange","e","target","files","file","reader","FileReader","onload","event","result","readAsDataURL","href","name","Formik","initialValues","onSubmit","formik","autoComplete","className","concat","touched","errors","id","placeholder","component","DatePicker","ref","formatWeekDay","nameOfDay","substr","selected","date","locale","dateFormat","calendarStartDay","placeholderText","onChangeRaw","preventDefault","value","renderCustomHeader","_ref2","changeYear","changeMonth","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","onClick","disabled","getYear","_ref3","map","option","getMonth","_ref4","indexOf","current","setOpen","htmlFor","_Fragment","UserForm"],"sourceRoot":""}